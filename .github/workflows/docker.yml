name: Deploy Docker

on:
  push:
    branches:
      - main

jobs:
  docker:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - dockerfile-extension: ""
            dockerimage-suffix: ""
          - dockerfile-extension: ".gcc"
            dockerimage-suffix: "-gcc"
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Cache pip packages
        uses: actions/cache@v2
        with:
          path: /tmp/.pip-cache
          key: ${{ runner.os }}-pip-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Login to GH registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: maxnz
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
      - name: Determine tags
        id: docker_tags
        run: script/docker-tags.bash "${{ matrix.dockerimage-suffix }}"
        env:
          DOCKER_IMAGE: ghcr.io/stodevx/stograde
          GITHUB_REF: $GITHUB_REF
          GITHUB_SHA: $GITHUB_SHA
      - name: Build and push with tags ${{ steps.docker_tags.outputs.tags }}
        uses: docker/build-push-action@v2
        with:
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          file: Dockerfile${{ matrix.dockerfile-extension }}
#          platforms: linux/arm/v7,linux/amd64
          push: true
          tags: ${{ steps.docker_tags.outputs.tags }}
      - name: Overwrite old cache with new cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
#      - name: Log in to GH registry
#        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

#      - name: Create docker images based on Dockerfile${{ matrix.dockerfile-extension }}
#        run: script/docker-deploy "Dockerfile${{ matrix.dockerfile-extension }}" "$GITHUB_REF" "${{ matrix.dockerimage-suffix }}"
#        env:
#          DOCKER_IMAGE: stodevx/stograde
#          GITHUB_ACTOR: ${{ github.actor }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
